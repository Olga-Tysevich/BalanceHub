volumes:
  pg_balancehub:
    name: pg_balancehub_db_volume
    external: false
  es_data:
    name: es_data_volume
    external: false

services:
  balancehub_db:
    container_name: ${BALANCE_HUB_DB_NAME}
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=${BALANCE_HUB_DB_USER}
      - POSTGRES_PASSWORD=${BALANCE_HUB_DB_PASSWORD}
      - POSTGRES_DB=${BALANCE_HUB_DB_NAME}
    volumes:
      - pg_balancehub:/var/lib/postgresql/data

    ports:
      - ${BALANCE_HUB_DB_HOST}:${BALANCE_HUB_DB_EPORT}:${BALANCE_HUB_DB_PORT}

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    ports:
      - ${REDIS_PORT_EPORT}:${REDIS_PORT}
    networks:
      - balancehub_network


  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xmx512m -Xms512m
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - ${ELASTIC_HTTP_API_PORT}
      - ${ELASTIC_HTTP_TRANSPORT_PORT}
    restart: always

  app:
    restart: no
    build:
      context: ${APP_PATH}
      dockerfile: Dockerfile
    ports:
      - ${BALANCE_HUB_APP_EPORT}:${BALANCE_HUB_APP_PORT}
    depends_on:
      - balancehub_db
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_APPLICATION_JSON: ${SPRING_APPLICATION_PARAMS}
      JAVA_OPTS: ${JV_MAX_MEM}

networks:
  balancehub_network:
    driver: bridge